document.querySelector('mutation-test-report-app').report = {"files":{"C:\\Users\\X9712645K\\Desktop\\Proyectos\\hello-world-nest-folder\\hello-world-nest\\hello-world-nest\\src\\app.controller.ts":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":4,"line":11},"start":{"column":22,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n"},"C:\\Users\\X9712645K\\Desktop\\Proyectos\\hello-world-nest-folder\\hello-world-nest\\hello-world-nest\\src\\helpers\\array-helper.ts":{"language":"typescript","mutants":[{"id":"11","location":{"end":{"column":26,"line":10},"start":{"column":12,"line":10}},"mutatorName":"EqualityOperator","replacement":"target == null","status":"Survived"},{"id":"12","location":{"end":{"column":47,"line":10},"start":{"column":30,"line":10}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"13","location":{"end":{"column":47,"line":10},"start":{"column":30,"line":10}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"14","location":{"end":{"column":47,"line":10},"start":{"column":30,"line":10}},"mutatorName":"EqualityOperator","replacement":"target.length >= 0","status":"Survived"},{"id":"15","location":{"end":{"column":47,"line":10},"start":{"column":30,"line":10}},"mutatorName":"EqualityOperator","replacement":"target.length <= 0","status":"Survived"},{"id":"5","location":{"end":{"column":4,"line":11},"start":{"column":49,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4","location":{"end":{"column":60,"line":6},"start":{"column":25,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"3","location":{"end":{"column":4,"line":7},"start":{"column":14,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"10","location":{"end":{"column":26,"line":10},"start":{"column":12,"line":10}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"9","location":{"end":{"column":26,"line":10},"start":{"column":12,"line":10}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"6","location":{"end":{"column":47,"line":10},"start":{"column":12,"line":10}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"7","location":{"end":{"column":47,"line":10},"start":{"column":12,"line":10}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"8","location":{"end":{"column":47,"line":10},"start":{"column":12,"line":10}},"mutatorName":"LogicalOperator","replacement":"target != null || target.length > 0","status":"Survived"}],"source":"export class ArrayHelper {\r\n  public static containsAllElements(\r\n    sample: string[],\r\n    target: string[],\r\n  ): boolean {\r\n    return target.every(element => sample.includes(element));\r\n  }\r\n\r\n  public static isEmpty(target: any[]): boolean {\r\n    return target != null && target.length > 0;\r\n  }\r\n}\r\n"},"C:\\Users\\X9712645K\\Desktop\\Proyectos\\hello-world-nest-folder\\hello-world-nest\\hello-world-nest\\src\\helpers\\date-helper.ts":{"language":"typescript","mutants":[{"id":"16","location":{"end":{"column":4,"line":8},"start":{"column":51,"line":2}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"17","location":{"end":{"column":49,"line":6},"start":{"column":7,"line":4}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"18","location":{"end":{"column":49,"line":6},"start":{"column":7,"line":4}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"19","location":{"end":{"column":49,"line":6},"start":{"column":7,"line":4}},"mutatorName":"LogicalOperator","replacement":"date1.getDay() == date2.getDay() && date1.getMonth() == date2.getMonth() || date1.getFullYear() == date2.getFullYear()","status":"Survived"},{"id":"20","location":{"end":{"column":43,"line":5},"start":{"column":7,"line":4}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"21","location":{"end":{"column":43,"line":5},"start":{"column":7,"line":4}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"22","location":{"end":{"column":43,"line":5},"start":{"column":7,"line":4}},"mutatorName":"LogicalOperator","replacement":"date1.getDay() == date2.getDay() || date1.getMonth() == date2.getMonth()","status":"Survived"},{"id":"23","location":{"end":{"column":39,"line":4},"start":{"column":7,"line":4}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"24","location":{"end":{"column":39,"line":4},"start":{"column":7,"line":4}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"25","location":{"end":{"column":39,"line":4},"start":{"column":7,"line":4}},"mutatorName":"EqualityOperator","replacement":"date1.getDay() != date2.getDay()","status":"Survived"},{"id":"26","location":{"end":{"column":43,"line":5},"start":{"column":7,"line":5}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"27","location":{"end":{"column":43,"line":5},"start":{"column":7,"line":5}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"29","location":{"end":{"column":49,"line":6},"start":{"column":7,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"28","location":{"end":{"column":43,"line":5},"start":{"column":7,"line":5}},"mutatorName":"EqualityOperator","replacement":"date1.getMonth() != date2.getMonth()","status":"Survived"},{"id":"30","location":{"end":{"column":49,"line":6},"start":{"column":7,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"31","location":{"end":{"column":49,"line":6},"start":{"column":7,"line":6}},"mutatorName":"EqualityOperator","replacement":"date1.getFullYear() != date2.getFullYear()","status":"Survived"}],"source":"export class DateHelper {\r\n  static equal(date1: Date, date2: Date): boolean {\r\n    return (\r\n      date1.getDay() == date2.getDay() &&\r\n      date1.getMonth() == date2.getMonth() &&\r\n      date1.getFullYear() == date2.getFullYear()\r\n    );\r\n  }\r\n}\r\n"},"C:\\Users\\X9712645K\\Desktop\\Proyectos\\hello-world-nest-folder\\hello-world-nest\\hello-world-nest\\src\\app.service.ts":{"language":"typescript","mutants":[{"id":"1","location":{"end":{"column":4,"line":7},"start":{"column":22,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2","location":{"end":{"column":26,"line":6},"start":{"column":12,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n"},"C:\\Users\\X9712645K\\Desktop\\Proyectos\\hello-world-nest-folder\\hello-world-nest\\hello-world-nest\\src\\helpers\\filter-helper.ts":{"language":"typescript","mutants":[{"id":"32","location":{"end":{"column":35,"line":6},"start":{"column":23,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"34","location":{"end":{"column":4,"line":18},"start":{"column":5,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"33","location":{"end":{"column":35,"line":6},"start":{"column":31,"line":6}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"35","location":{"end":{"column":6,"line":13},"start":{"column":44,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"36","location":{"end":{"column":43,"line":11},"start":{"column":15,"line":11}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"37","location":{"end":{"column":43,"line":11},"start":{"column":15,"line":11}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"38","location":{"end":{"column":43,"line":11},"start":{"column":15,"line":11}},"mutatorName":"LogicalOperator","replacement":"match || customCondition(el)","status":"Survived"},{"id":"39","location":{"end":{"column":43,"line":14},"start":{"column":9,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"42","location":{"end":{"column":6,"line":16},"start":{"column":45,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"40","location":{"end":{"column":43,"line":14},"start":{"column":9,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"41","location":{"end":{"column":43,"line":14},"start":{"column":9,"line":14}},"mutatorName":"LogicalOperator","replacement":"sortingObj || sortingObj.direction","status":"Survived"},{"id":"43","location":{"end":{"column":4,"line":46},"start":{"column":60,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"44","location":{"end":{"column":64,"line":22},"start":{"column":7,"line":22}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"45","location":{"end":{"column":64,"line":22},"start":{"column":14,"line":22}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"46","location":{"end":{"column":64,"line":22},"start":{"column":14,"line":22}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"48","location":{"end":{"column":37,"line":22},"start":{"column":14,"line":22}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"47","location":{"end":{"column":64,"line":22},"start":{"column":14,"line":22}},"mutatorName":"LogicalOperator","replacement":"objectFilter[k] != null || object[k] !== undefined","status":"Survived"},{"id":"50","location":{"end":{"column":37,"line":22},"start":{"column":14,"line":22}},"mutatorName":"EqualityOperator","replacement":"objectFilter[k] == null","status":"Survived"},{"id":"51","location":{"end":{"column":64,"line":22},"start":{"column":41,"line":22}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"49","location":{"end":{"column":37,"line":22},"start":{"column":14,"line":22}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"52","location":{"end":{"column":64,"line":22},"start":{"column":41,"line":22}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"53","location":{"end":{"column":64,"line":22},"start":{"column":41,"line":22}},"mutatorName":"EqualityOperator","replacement":"object[k] === undefined","status":"Survived"},{"id":"54","location":{"end":{"column":21,"line":24},"start":{"column":17,"line":24}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"55","location":{"end":{"column":6,"line":43},"start":{"column":33,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"56","location":{"end":{"column":43,"line":26},"start":{"column":11,"line":26}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"59","location":{"end":{"column":31,"line":27},"start":{"column":26,"line":27}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"57","location":{"end":{"column":43,"line":26},"start":{"column":11,"line":26}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"58","location":{"end":{"column":8,"line":36},"start":{"column":45,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"61","location":{"end":{"column":61,"line":28},"start":{"column":29,"line":28}},"mutatorName":"EqualityOperator","replacement":"index <= objectFilter[key].length","status":"Survived"},{"id":"62","location":{"end":{"column":61,"line":28},"start":{"column":29,"line":28}},"mutatorName":"EqualityOperator","replacement":"index >= objectFilter[key].length","status":"Survived"},{"id":"60","location":{"end":{"column":61,"line":28},"start":{"column":29,"line":28}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"63","location":{"end":{"column":70,"line":28},"start":{"column":63,"line":28}},"mutatorName":"UpdateOperator","replacement":"index--","status":"Survived"},{"id":"64","location":{"end":{"column":10,"line":34},"start":{"column":72,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"65","location":{"end":{"column":57,"line":33},"start":{"column":13,"line":30}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"67","location":{"end":{"column":57,"line":33},"start":{"column":13,"line":30}},"mutatorName":"LogicalOperator","replacement":"matcharray && (matcher[key] ? matcher[key](object[key], objectFilter[key][index]) : object[key] == objectFilter[key][index])","status":"Survived"},{"id":"66","location":{"end":{"column":57,"line":33},"start":{"column":13,"line":30}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"68","location":{"end":{"column":56,"line":33},"start":{"column":17,"line":33}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"70","location":{"end":{"column":56,"line":33},"start":{"column":17,"line":33}},"mutatorName":"EqualityOperator","replacement":"object[key] != objectFilter[key][index]","status":"Survived"},{"id":"69","location":{"end":{"column":56,"line":33},"start":{"column":17,"line":33}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"72","location":{"end":{"column":36,"line":35},"start":{"column":17,"line":35}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"75","location":{"end":{"column":48,"line":41},"start":{"column":11,"line":38}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"73","location":{"end":{"column":36,"line":35},"start":{"column":17,"line":35}},"mutatorName":"LogicalOperator","replacement":"match || matcharray","status":"Survived"},{"id":"71","location":{"end":{"column":36,"line":35},"start":{"column":17,"line":35}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"74","location":{"end":{"column":8,"line":42},"start":{"column":14,"line":36}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"76","location":{"end":{"column":48,"line":41},"start":{"column":11,"line":38}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"77","location":{"end":{"column":48,"line":41},"start":{"column":11,"line":38}},"mutatorName":"LogicalOperator","replacement":"match || (matcher[key] ? matcher[key](object[key], objectFilter[key]) : object[key] == objectFilter[key])","status":"Survived"},{"id":"78","location":{"end":{"column":47,"line":41},"start":{"column":15,"line":41}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"79","location":{"end":{"column":47,"line":41},"start":{"column":15,"line":41}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"81","location":{"end":{"column":4,"line":62},"start":{"column":49,"line":48}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"80","location":{"end":{"column":47,"line":41},"start":{"column":15,"line":41}},"mutatorName":"EqualityOperator","replacement":"object[key] != objectFilter[key]","status":"Survived"},{"id":"83","location":{"end":{"column":26,"line":49},"start":{"column":9,"line":49}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"82","location":{"end":{"column":26,"line":49},"start":{"column":9,"line":49}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"84","location":{"end":{"column":6,"line":61},"start":{"column":28,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"85","location":{"end":{"column":41,"line":50},"start":{"column":11,"line":50}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"86","location":{"end":{"column":41,"line":50},"start":{"column":11,"line":50}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"87","location":{"end":{"column":41,"line":50},"start":{"column":11,"line":50}},"mutatorName":"EqualityOperator","replacement":"sortingObj.direction != 'DESC'","status":"Survived"},{"id":"88","location":{"end":{"column":41,"line":50},"start":{"column":35,"line":50}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"89","location":{"end":{"column":8,"line":55},"start":{"column":43,"line":50}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"91","location":{"end":{"column":72,"line":52},"start":{"column":11,"line":52}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"90","location":{"end":{"column":16,"line":54},"start":{"column":16,"line":51}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"92","location":{"end":{"column":72,"line":52},"start":{"column":11,"line":52}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"94","location":{"end":{"column":72,"line":52},"start":{"column":11,"line":52}},"mutatorName":"EqualityOperator","replacement":"new Date(l[sortingObj.field]) <= new Date(r[sortingObj.field])","status":"Survived"},{"id":"95","location":{"end":{"column":17,"line":53},"start":{"column":15,"line":53}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"93","location":{"end":{"column":72,"line":52},"start":{"column":11,"line":52}},"mutatorName":"EqualityOperator","replacement":"new Date(l[sortingObj.field]) >= new Date(r[sortingObj.field])","status":"Survived"},{"id":"96","location":{"end":{"column":47,"line":55},"start":{"column":18,"line":55}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"97","location":{"end":{"column":47,"line":55},"start":{"column":18,"line":55}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"98","location":{"end":{"column":47,"line":55},"start":{"column":18,"line":55}},"mutatorName":"EqualityOperator","replacement":"sortingObj.direction != 'ASC'","status":"Survived"},{"id":"99","location":{"end":{"column":47,"line":55},"start":{"column":42,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"102","location":{"end":{"column":72,"line":57},"start":{"column":11,"line":57}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"101","location":{"end":{"column":16,"line":59},"start":{"column":16,"line":56}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"100","location":{"end":{"column":8,"line":60},"start":{"column":49,"line":55}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"103","location":{"end":{"column":72,"line":57},"start":{"column":11,"line":57}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"104","location":{"end":{"column":72,"line":57},"start":{"column":11,"line":57}},"mutatorName":"EqualityOperator","replacement":"new Date(r[sortingObj.field]) >= new Date(l[sortingObj.field])","status":"Survived"},{"id":"105","location":{"end":{"column":72,"line":57},"start":{"column":11,"line":57}},"mutatorName":"EqualityOperator","replacement":"new Date(r[sortingObj.field]) <= new Date(l[sortingObj.field])","status":"Survived"},{"id":"106","location":{"end":{"column":17,"line":58},"start":{"column":15,"line":58}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"}],"source":"export class FilterHelper {\r\n  static filter(\r\n    collection,\r\n    objectFilter,\r\n    customMatcher = {},\r\n    customCondition = (el) => true,\r\n    sortingObj?\r\n  ) {\r\n    var result = collection.filter((el) => {\r\n      var match = FilterHelper.applyMatch(el, objectFilter, customMatcher);\r\n      match = match && customCondition(el);\r\n      return match;\r\n    });\r\n    if (sortingObj && sortingObj.direction) {\r\n      result = result.sort(FilterHelper.getSortingFunction(sortingObj));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private static applyMatch(object, objectFilter, matcher) {\r\n    var filterKeys = Object.keys(objectFilter).filter(\r\n      (k) => objectFilter[k] != null && object[k] !== undefined\r\n    );\r\n    var match = true;\r\n    filterKeys.forEach((key) => {\r\n      if (Array.isArray(objectFilter[key])) {\r\n        var matcharray = false;\r\n        for (let index = 0; index < objectFilter[key].length; index++) {\r\n          matcharray =\r\n            matcharray ||\r\n            (matcher[key]\r\n              ? matcher[key](object[key], objectFilter[key][index])\r\n              : object[key] == objectFilter[key][index]);\r\n        }\r\n        match = match && matcharray;\r\n      } else {\r\n        match =\r\n          match &&\r\n          (matcher[key]\r\n            ? matcher[key](object[key], objectFilter[key])\r\n            : object[key] == objectFilter[key]);\r\n      }\r\n    });\r\n\r\n    return match;\r\n  }\r\n\r\n  private static getSortingFunction(sortingObj) {\r\n    if (sortingObj.isDate) {\r\n      if (sortingObj.direction == 'DESC') {\r\n        return (l, r) =>\r\n          new Date(l[sortingObj.field]) > new Date(r[sortingObj.field])\r\n            ? -1\r\n            : 1;\r\n      } else if (sortingObj.direction == 'ASC') {\r\n        return (l, r) =>\r\n          new Date(r[sortingObj.field]) > new Date(l[sortingObj.field])\r\n            ? -1\r\n            : 1;\r\n      }\r\n    }\r\n  }\r\n}\r\n"},"C:\\Users\\X9712645K\\Desktop\\Proyectos\\hello-world-nest-folder\\hello-world-nest\\hello-world-nest\\src\\helpers\\random-helper.ts":{"language":"typescript","mutants":[{"id":"107","location":{"end":{"column":4,"line":4},"start":{"column":47,"line":2}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"109","location":{"end":{"column":48,"line":3},"start":{"column":21,"line":3}},"mutatorName":"ArithmeticOperator","replacement":"Math.random() / (max - min)","status":"Survived"},{"id":"108","location":{"end":{"column":54,"line":3},"start":{"column":21,"line":3}},"mutatorName":"ArithmeticOperator","replacement":"Math.random() * (max - min) - min","status":"Survived"},{"id":"110","location":{"end":{"column":47,"line":3},"start":{"column":38,"line":3}},"mutatorName":"ArithmeticOperator","replacement":"max + min","status":"Survived"},{"id":"111","location":{"end":{"column":4,"line":11},"start":{"column":34,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"112","location":{"end":{"column":38,"line":10},"start":{"column":12,"line":10}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"}],"source":"export class RandomHelper {\r\n  static getRandomArbitrary(min, max): number {\r\n    return parseInt(Math.random() * (max - min) + min);\r\n  }\r\n\r\n  static getRandomDate(): string {\r\n    const day = this.getRandomArbitrary(1, 31);\r\n    const month = this.getRandomArbitrary(1, 12);\r\n    const year = this.getRandomArbitrary(1, 50);\r\n    return `${year}y${month}m${day}d`;\r\n  }\r\n}\r\n"},"C:\\Users\\X9712645K\\Desktop\\Proyectos\\hello-world-nest-folder\\hello-world-nest\\hello-world-nest\\src\\mock\\filter-helpers-mocks.ts":{"language":"typescript","mutants":[{"id":"114","location":{"end":{"column":2,"line":35},"start":{"column":25,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"116","location":{"end":{"column":6,"line":12},"start":{"column":5,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"115","location":{"end":{"column":4,"line":33},"start":{"column":12,"line":2}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"117","location":{"end":{"column":37,"line":4},"start":{"column":11,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"118","location":{"end":{"column":31,"line":5},"start":{"column":17,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"119","location":{"end":{"column":31,"line":6},"start":{"column":20,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"120","location":{"end":{"column":29,"line":7},"start":{"column":17,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"121","location":{"end":{"column":22,"line":8},"start":{"column":12,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"123","location":{"end":{"column":24,"line":10},"start":{"column":16,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"122","location":{"end":{"column":26,"line":9},"start":{"column":20,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"124","location":{"end":{"column":6,"line":22},"start":{"column":5,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"126","location":{"end":{"column":34,"line":15},"start":{"column":17,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"125","location":{"end":{"column":37,"line":14},"start":{"column":11,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"127","location":{"end":{"column":31,"line":16},"start":{"column":20,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"129","location":{"end":{"column":22,"line":18},"start":{"column":12,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"128","location":{"end":{"column":29,"line":17},"start":{"column":17,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"130","location":{"end":{"column":26,"line":19},"start":{"column":20,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"131","location":{"end":{"column":24,"line":20},"start":{"column":16,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"132","location":{"end":{"column":6,"line":32},"start":{"column":5,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"133","location":{"end":{"column":37,"line":24},"start":{"column":11,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"134","location":{"end":{"column":32,"line":25},"start":{"column":17,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"135","location":{"end":{"column":32,"line":26},"start":{"column":20,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"136","location":{"end":{"column":29,"line":27},"start":{"column":17,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"138","location":{"end":{"column":26,"line":29},"start":{"column":20,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"137","location":{"end":{"column":22,"line":28},"start":{"column":12,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"140","location":{"end":{"column":2,"line":42},"start":{"column":30,"line":36}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"141","location":{"end":{"column":27,"line":37},"start":{"column":13,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"139","location":{"end":{"column":24,"line":30},"start":{"column":16,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"142","location":{"end":{"column":20,"line":38},"start":{"column":8,"line":38}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"143","location":{"end":{"column":19,"line":38},"start":{"column":9,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"144","location":{"end":{"column":24,"line":39},"start":{"column":16,"line":39}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"145","location":{"end":{"column":23,"line":39},"start":{"column":17,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"147","location":{"end":{"column":2,"line":54},"start":{"column":31,"line":43}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"146","location":{"end":{"column":14,"line":41},"start":{"column":9,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"151","location":{"end":{"column":29,"line":47},"start":{"column":18,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"148","location":{"end":{"column":4,"line":53},"start":{"column":3,"line":44}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"149","location":{"end":{"column":35,"line":45},"start":{"column":9,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"150","location":{"end":{"column":29,"line":46},"start":{"column":15,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"153","location":{"end":{"column":20,"line":49},"start":{"column":10,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"152","location":{"end":{"column":27,"line":48},"start":{"column":15,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"154","location":{"end":{"column":24,"line":50},"start":{"column":18,"line":50}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"155","location":{"end":{"column":22,"line":51},"start":{"column":14,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"156","location":{"end":{"column":2,"line":86},"start":{"column":36,"line":55}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"158","location":{"end":{"column":29,"line":57},"start":{"column":18,"line":57}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"157","location":{"end":{"column":4,"line":65},"start":{"column":3,"line":56}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"159","location":{"end":{"column":29,"line":58},"start":{"column":15,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"160","location":{"end":{"column":35,"line":59},"start":{"column":9,"line":59}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"161","location":{"end":{"column":20,"line":60},"start":{"column":10,"line":60}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"162","location":{"end":{"column":27,"line":61},"start":{"column":15,"line":61}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"163","location":{"end":{"column":24,"line":62},"start":{"column":18,"line":62}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"164","location":{"end":{"column":22,"line":64},"start":{"column":14,"line":64}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"165","location":{"end":{"column":4,"line":75},"start":{"column":3,"line":66}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"166","location":{"end":{"column":29,"line":67},"start":{"column":18,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"168","location":{"end":{"column":35,"line":69},"start":{"column":9,"line":69}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"167","location":{"end":{"column":32,"line":68},"start":{"column":15,"line":68}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"169","location":{"end":{"column":20,"line":70},"start":{"column":10,"line":70}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"172","location":{"end":{"column":22,"line":74},"start":{"column":14,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"170","location":{"end":{"column":27,"line":71},"start":{"column":15,"line":71}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"175","location":{"end":{"column":30,"line":78},"start":{"column":15,"line":78}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"173","location":{"end":{"column":4,"line":85},"start":{"column":3,"line":76}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"171","location":{"end":{"column":24,"line":72},"start":{"column":18,"line":72}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"174","location":{"end":{"column":30,"line":77},"start":{"column":18,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"176","location":{"end":{"column":35,"line":79},"start":{"column":9,"line":79}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"177","location":{"end":{"column":20,"line":80},"start":{"column":10,"line":80}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"178","location":{"end":{"column":27,"line":81},"start":{"column":15,"line":81}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"179","location":{"end":{"column":24,"line":82},"start":{"column":18,"line":82}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"180","location":{"end":{"column":22,"line":84},"start":{"column":14,"line":84}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"182","location":{"end":{"column":26,"line":88},"start":{"column":13,"line":88}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"181","location":{"end":{"column":2,"line":93},"start":{"column":27,"line":87}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"184","location":{"end":{"column":18,"line":89},"start":{"column":9,"line":89}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"185","location":{"end":{"column":23,"line":90},"start":{"column":16,"line":90}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"183","location":{"end":{"column":19,"line":89},"start":{"column":8,"line":89}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"186","location":{"end":{"column":22,"line":90},"start":{"column":17,"line":90}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"187","location":{"end":{"column":15,"line":92},"start":{"column":9,"line":92}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"189","location":{"end":{"column":2,"line":99},"start":{"column":35,"line":96}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"188","location":{"end":{"column":30,"line":94},"start":{"column":28,"line":94}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"190","location":{"end":{"column":30,"line":97},"start":{"column":8,"line":97}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"191","location":{"end":{"column":19,"line":97},"start":{"column":9,"line":97}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"192","location":{"end":{"column":29,"line":97},"start":{"column":21,"line":97}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"194","location":{"end":{"column":23,"line":98},"start":{"column":17,"line":98}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"195","location":{"end":{"column":30,"line":98},"start":{"column":25,"line":98}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"193","location":{"end":{"column":31,"line":98},"start":{"column":16,"line":98}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"196","location":{"end":{"column":2,"line":104},"start":{"column":33,"line":101}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"197","location":{"end":{"column":25,"line":102},"start":{"column":8,"line":102}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"199","location":{"end":{"column":24,"line":102},"start":{"column":16,"line":102}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"198","location":{"end":{"column":14,"line":102},"start":{"column":9,"line":102}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"201","location":{"end":{"column":21,"line":103},"start":{"column":17,"line":103}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"200","location":{"end":{"column":29,"line":103},"start":{"column":16,"line":103}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"202","location":{"end":{"column":28,"line":103},"start":{"column":23,"line":103}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const original = {\r\n  members: [\r\n    {\r\n      id: '5f3411b7bf69de20180ca1bc',\r\n      fullName: 'Phyllis Sipe',\r\n      dateOfBirth: '7/13/1931',\r\n      medicaId: '9605327155',\r\n      lob: 'MedicaID',\r\n      planProduct: 'LTSS',\r\n      timeLob: '1y1m1d',\r\n      poc: 50,\r\n    },\r\n    {\r\n      id: '5f299357bf69e01e58f384bf',\r\n      fullName: 'Connie Tressler',\r\n      dateOfBirth: '8/21/1944',\r\n      medicaId: '3305618583',\r\n      lob: 'MedicaID',\r\n      planProduct: 'LTSS',\r\n      timeLob: '1y1m1d',\r\n      poc: 50,\r\n    },\r\n    {\r\n      id: '5f047dc6bf69e107b0180c5b',\r\n      fullName: 'Richard Pyles',\r\n      dateOfBirth: '10/19/1922',\r\n      medicaId: '9502282420',\r\n      lob: 'MedicaID',\r\n      planProduct: 'LTSS',\r\n      timeLob: '1y1m1d',\r\n      poc: 50,\r\n    },\r\n  ],\r\n  count: 3,\r\n};\r\nexport const successFilter = {\r\n  fullName: 'Phyllis Sipe',\r\n  lob: ['MedicaID'],\r\n  planProduct: ['LTSS'],\r\n  poc: 50,\r\n  sort: 'ASC',\r\n};\r\nexport const filterResponse = [\r\n  {\r\n    id: '5f3411b7bf69de20180ca1bc',\r\n    fullName: 'Phyllis Sipe',\r\n    dateOfBirth: '7/13/1931',\r\n    medicaId: '9605327155',\r\n    lob: 'MedicaID',\r\n    planProduct: 'LTSS',\r\n    timeLob: '1y1m1d',\r\n    poc: 50,\r\n  },\r\n];\r\nexport const filterArrayResponse = [\r\n  {\r\n    dateOfBirth: '7/13/1931',\r\n    fullName: 'Phyllis Sipe',\r\n    id: '5f3411b7bf69de20180ca1bc',\r\n    lob: 'MedicaID',\r\n    medicaId: '9605327155',\r\n    planProduct: 'LTSS',\r\n    poc: 50,\r\n    timeLob: '1y1m1d',\r\n  },\r\n  {\r\n    dateOfBirth: '8/21/1944',\r\n    fullName: 'Connie Tressler',\r\n    id: '5f299357bf69e01e58f384bf',\r\n    lob: 'MedicaID',\r\n    medicaId: '3305618583',\r\n    planProduct: 'LTSS',\r\n    poc: 50,\r\n    timeLob: '1y1m1d',\r\n  },\r\n  {\r\n    dateOfBirth: '10/19/1922',\r\n    fullName: 'Richard Pyles',\r\n    id: '5f047dc6bf69e107b0180c5b',\r\n    lob: 'MedicaID',\r\n    medicaId: '9502282420',\r\n    planProduct: 'LTSS',\r\n    poc: 50,\r\n    timeLob: '1y1m1d',\r\n  },\r\n];\r\nexport const failFilter = {\r\n  fullName: 'Alan Turing',\r\n  lob: ['MedicaI'],\r\n  planProduct: ['LTS'],\r\n  poc: 1,\r\n  sort: 'DESC',\r\n};\r\nexport const emptyResult = [];\r\n\r\nexport const succesArrayFilters = {\r\n  lob: ['MedicaID', 'Medica'],\r\n  planProduct: ['LTSS', 'LTE'],\r\n};\r\n\r\nexport const failArrayFilters = {\r\n  lob: ['Med', 'Medica'],\r\n  planProduct: ['SS', 'LTE'],\r\n};\r\n"},"C:\\Users\\X9712645K\\Desktop\\Proyectos\\hello-world-nest-folder\\hello-world-nest\\hello-world-nest\\src\\main.ts":{"language":"typescript","mutants":[{"id":"113","location":{"end":{"column":2,"line":7},"start":{"column":28,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(3000);\n}\nbootstrap();\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};